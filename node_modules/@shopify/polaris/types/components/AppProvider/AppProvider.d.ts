import React from 'react';
import { Theme } from '../../utilities/theme';
import { I18n, TranslationDictionary } from '../../utilities/i18n';
import { createAppBridge, AppBridgeOptions } from '../../utilities/app-bridge';
import { LinkLikeComponent } from '../../utilities/link';
interface State {
    intl: I18n;
    appBridge: ReturnType<typeof createAppBridge>;
    link: LinkLikeComponent | undefined;
}
export interface Props extends AppBridgeOptions {
    /** A locale object or array of locale objects that overrides default translations */
    i18n: TranslationDictionary | TranslationDictionary[];
    /** A custom component to use for all links used by Polaris components */
    linkComponent?: LinkLikeComponent;
    /** Custom logos and colors provided to select components */
    theme?: Theme;
}
export default class AppProvider extends React.Component<Props, State> {
    private stickyManager;
    private scrollLockManager;
    constructor(props: Props);
    componentDidMount(): void;
    componentDidUpdate({ i18n: prevI18n, linkComponent: prevLinkComponent, apiKey: prevApiKey, shopOrigin: prevShopOrigin, forceRedirect: prevForceRedirect, }: Props): void;
    render(): JSX.Element;
}
export {};
