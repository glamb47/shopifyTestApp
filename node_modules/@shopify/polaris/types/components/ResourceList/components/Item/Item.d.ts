/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { DisableableAction } from '../../../../types';
import { Props as AvatarProps } from '../../../Avatar';
import { Props as ThumbnailProps } from '../../../Thumbnail';
import { WithAppProviderProps } from '../../../../utilities/with-app-provider';
import { ResourceListContext } from '../../context';
export declare type ExceptionStatus = 'neutral' | 'warning' | 'critical';
export declare type MediaSize = 'small' | 'medium' | 'large';
export declare type MediaType = 'avatar' | 'thumbnail';
interface WithContextTypes<IJ> {
    context: IJ;
}
export interface BaseProps {
    /** Visually hidden text for screen readers */
    accessibilityLabel?: string;
    /** Id of the element the item onClick controls */
    ariaControls?: string;
    /** Tells screen reader the controlled element is expanded */
    ariaExpanded?: boolean;
    /** Unique identifier for the item */
    id: string;
    media?: React.ReactElement<AvatarProps | ThumbnailProps>;
    persistActions?: boolean;
    shortcutActions?: DisableableAction[];
    sortOrder?: number;
    children?: React.ReactNode;
}
export interface PropsWithUrl extends BaseProps {
    url: string;
    onClick?(id?: string): void;
}
export interface PropsWithClick extends BaseProps {
    url?: string;
    onClick(id?: string): void;
}
export declare type Props = PropsWithUrl | PropsWithClick;
export interface State {
    actionsMenuVisible: boolean;
    focused: boolean;
    focusedInner: boolean;
    selected: boolean;
}
export declare type CombinedProps = (PropsWithUrl & WithAppProviderProps & WithContextTypes<React.ContextType<typeof ResourceListContext>>) | (PropsWithClick & WithAppProviderProps & WithContextTypes<React.ContextType<typeof ResourceListContext>>);
export declare class BaseItem extends React.Component<CombinedProps, State> {
    static getDerivedStateFromProps(nextProps: CombinedProps, prevState: State): {
        selected: boolean;
    } | null;
    state: State;
    private node;
    private checkboxId;
    private overlayId;
    private buttonOverlay;
    shouldComponentUpdate(nextProps: CombinedProps, nextState: State): boolean;
    render(): JSX.Element;
    private setNode;
    private handleFocus;
    private handleBlur;
    private handleLargerSelectionArea;
    private handleSelection;
    private handleClick;
    private handleKeyUp;
    private handleActionsClick;
    private handleCloseRequest;
}
declare function Item(props: CombinedProps): JSX.Element;
declare const _default: React.FunctionComponent<Props> & import("hoist-non-react-statics").NonReactStatics<(React.ComponentClass<(PropsWithUrl & WithAppProviderProps) | (PropsWithClick & WithAppProviderProps), any> & typeof Item) | (React.FunctionComponent<(PropsWithUrl & WithAppProviderProps) | (PropsWithClick & WithAppProviderProps)> & typeof Item), {}>;
export default _default;
